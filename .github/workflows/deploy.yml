name: 'deploy'
on:
  push:
    paths:
      - '.github/workflows/**'
      - 'src/**'
      - 'build.gradle.kts'
      - 'Dockerfile'
      - 'readme.md'
      - 'infraScript/**'
#      - 'docker-compose.yml'  # docker-compose.yml 파일이 변경될 때만 트리거
    branches:
      - 'main'
jobs:
  makeTagAndRelease:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.create_tag.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4
      - name: Create Tag
        id: create_tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.new_tag }}
          release_name: Release ${{ steps.create_tag.outputs.new_tag }}
          body: ${{ steps.create_tag.outputs.changelog }}
          draft: false
          prerelease: false
  buildImageAndPush:
    name: 도커 이미지 빌드와 푸시
    needs: makeTagAndRelease
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Docker Buildx 설치
        uses: docker/setup-buildx-action@v2
      - name: 레지스트리 로그인
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >> ${GITHUB_ENV}
        env:
          OWNER: "${{ github.repository_owner }}"
      - name: application-secret.yml 생성
        env:
          ACTIONS_STEP_DEBUG: true
          APPLICATION_SECRET: ${{ secrets.APPLICATION_SECRET_YML }}
        run: echo "$APPLICATION_SECRET" > src/main/resources/application-secret.yml
      - name: .env 파일 생성
        env:
          ENV: ${{ secrets.ENV }}
        run: echo "$ENV" > .env
      - name: 빌드 앤 푸시
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/wyl:${{ needs.makeTagAndRelease.outputs.tag_name }},
            ghcr.io/${{ env.OWNER_LC }}/wyl:latest
  deploy:
    runs-on: ubuntu-latest
    needs: [ buildImageAndPush ]
    steps:
      - name: AWS SSM Send-Command
        uses: peterkimzz/aws-ssm-send-command@master
        id: ssm
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          instance-ids: "i-01aaf279e641690cf"
          working-directory: /
          comment: Deploy
          command: |
            mkdir -p /dockerProjects/wyl
            curl -o /dockerProjects/wyl/zero_downtime_deploy.py https://raw.githubusercontent.com/BackEndSchoolPlus3th/jupiter-back/main/infraScript/zero_downtime_deploy.py
            chmod +x /dockerProjects/wyl/zero_downtime_deploy.py
            /dockerProjects/wyl/zero_downtime_deploy.py

#  monitorDockerComposeChanges:
#    name: Docker Compose 파일 변경 감지 및 Python 코드 실행
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: docker-compose.yml 변경 감지 및 Python 코드 실행
#        run: |
#          # 변경된 파일 목록에서 docker-compose.yml이 포함되었는지 확인
#          if git diff --name-only HEAD~1 | grep -q 'docker-compose.yml'; then
#            echo "docker-compose.yml 파일이 변경되었습니다. Python 코드 실행 중..."
#            # Python 코드 실행
#            python3 update_docker-compose.py
#          else
#            echo "docker-compose.yml 파일에 변경사항이 없습니다."
#          fi
